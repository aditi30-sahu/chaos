To create a dashboard UI identical to the one in the image using React and Tailwind CSS, here's the code structure. It includes a grid layout, styled cards for metrics, and line charts for the timeline graph.

Folder Structure:
css
Copy code
src/
├── App.js
├── components/
│   ├── Dashboard.js
│   ├── MetricCard.js
│   └── TimelineChart.js
App.js
jsx
Copy code
import React from "react";
import Dashboard from "./components/Dashboard";

function App() {
  return (
    <div className="min-h-screen bg-gray-900 text-white p-4">
      <Dashboard />
    </div>
  );
}

export default App;
Dashboard.js
jsx
Copy code
import React from "react";
import MetricCard from "./MetricCard";
import TimelineChart from "./TimelineChart";

const Dashboard = () => {
  // Sample chart data
  const chartDataZelle = [
    { time: "00:00", value: 100000 },
    { time: "02:00", value: 120000 },
    { time: "04:00", value: 150000 },
    { time: "06:00", value: 200000 },
    { time: "08:00", value: 220000 },
    { time: "10:00", value: 250000 },
  ];

  const chartDataTransferNow = [
    { time: "00:00", value: 50000 },
    { time: "02:00", value: 70000 },
    { time: "04:00", value: 120000 },
    { time: "06:00", value: 180000 },
    { time: "08:00", value: 200000 },
    { time: "10:00", value: 240000 },
  ];

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
      {/* Metric Cards */}
      <MetricCard title="Zelle - Incoming Credit Volume" value="991" />
      <MetricCard title="Zelle - Incoming Credit Success Rate" value="99.2%" />
      <MetricCard title="Zelle - Incoming Credit Amount" value="$393k" />
      <TimelineChart title="Zelle - Incoming Credit Amount" data={chartDataZelle} />

      <MetricCard title="TransferNow - Volume" value="992" />
      <MetricCard title="TransferNow - Success Rate" value="100%" />
      <MetricCard title="TransferNow - Amount" value="$2.43M" />
      <TimelineChart title="TransferNow - Amount" data={chartDataTransferNow} />
    </div>
  );
};

export default Dashboard;
MetricCard.js
jsx
Copy code
import React from "react";

const MetricCard = ({ title, value }) => {
  return (
    <div className="bg-gray-800 p-4 rounded-lg shadow-lg">
      <h3 className="text-sm text-gray-400">{title}</h3>
      <p className="text-3xl font-bold">{value}</p>
    </div>
  );
};

export default MetricCard;
TimelineChart.js
jsx
Copy code
import React from "react";
import { Line } from "react-chartjs-2";

const TimelineChart = ({ title, data }) => {
  const chartData = {
    labels: data.map((item) => item.time),
    datasets: [
      {
        label: title,
        data: data.map((item) => item.value),
        fill: true,
        borderColor: "#4ade80",
        backgroundColor: "rgba(74, 222, 128, 0.2)",
        tension: 0.3,
      },
    ],
  };

  const options = {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        display: false,
      },
    },
    scales: {
      x: {
        title: {
          display: true,
          text: "Time",
          color: "#fff",
        },
        ticks: {
          color: "#fff",
        },
      },
      y: {
        title: {
          display: true,
          text: "Amount",
          color: "#fff",
        },
        ticks: {
          color: "#fff",
        },
      },
    },
  };

  return (
    <div className="bg-gray-800 p-4 rounded-lg shadow-lg h-64">
      <h3 className="text-sm text-gray-400 mb-2">{title}</h3>
      <Line data={chartData} options={options} />
    </div>
  );
};

export default TimelineChart;
Tailwind CSS Configuration
Make sure you have Tailwind CSS installed and configured. Use the following commands if not already set up:

Install Tailwind
bash
Copy code
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init
tailwind.config.js
javascript
Copy code
module.exports = {
  content: ["./src/**/*.{js,jsx,ts,tsx}"],
  theme: {
    extend: {},
  },
  plugins: [],
};
index.css
css
Copy code
@tailwind base;
@tailwind components;
@tailwind utilities;
Resulting Features
Metric Cards: Styled rectangular cards with titles and values.
Line Charts: Using react-chartjs-2 for interactive line charts.
Responsive Layout: Tailwind grid with dynamic column resizing.
This setup will match the dashboard's appearance and structure as seen in your image. Let me know if you need further refinements!
